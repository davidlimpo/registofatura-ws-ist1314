<project name="registofatura-ws" default="build" basedir=".">

    <description>
        Standalone Java Web Service build file - contract first

        An Ant project defines targets that execute tasks
        parameterized by properties and paths.

        More information at: http://ant.apache.org/manual/
    </description>

    <!-- properties and paths -->

    <property name="src.dir" location="src" />
    <property name="build.dir" location="build" />
    <property name="build.classes.dir" location="${build.dir}/classes" />
    <property name="build.src.dir" location="${build.dir}/src" />
    
    <path id="project.classpath">
        <!-- compiled classes -->
        <pathelement location="${build.classes.dir}" />
        <path refid="com.mysql.jdbc" />
        <!-- libraries -->
        <fileset dir="../lib">
            <include name="**/*.jar" />
        </fileset>
    </path>
    
	<property name="uddi.url" value="http://localhost:8081" />
    <property name="ws.name" value="RegistoFatura" />
    <property name="ws.nameAlive" value="IamAliveImplService" />
    
    <property name="ws.url" value="http://localhost:8080/registofatura-ws/endpoint" />
	
    <property name="wsdl.file" value="${src.dir}/RegistoFatura.1_0.wsdl" />
    <property name="wsdl.fileAlive" value="${src.dir}/Alive.wsdl" />
    
    <makeurl property="wsdl.url" file="${wsdl.file}"/>
    <makeurl property="wsdl.urlAlive" file="${wsdl.fileAlive}"/>
    
    <property name="run.mainclass" value="registofatura.ws.RegistoFaturaMain"/>
 <!--    <property name="run.args" value="${uddi.url} '${ws.name}' ${ws.url}" />
 -->
    
    <!-- Database properties and paths -->

    <property name="sql.driver" value="com.mysql.jdbc.Driver"/>

    <property name="sql.host" value="localhost"/>
    <property name="sql.port" value="3306"/>
    <property name="sql.url" value="jdbc:mysql://${sql.host}:${sql.port}" />

    <property name="sql.admin.user" value="root"/>
    <property name="sql.admin.pass" value="qwerty"/>

    <property name="sql.db" value="regfatdb"/>
    <property name="sql.db2" value="regfatdb2"/>
    <property name="sql.db3" value="regfatdb3"/>
    
    <property name="sql.db.url" value="${sql.url}/${sql.db}" />
    <property name="sql.db.url2" value="${sql.url}/${sql.db2}" />
    <property name="sql.db.url3" value="${sql.url}/${sql.db3}" />

    <property name="sql.user" value="${sql.db}user"/>
    <property name="sql.pass" value="${sql.db}pass"/>
    
    <property name="sql.user2" value="${sql.db}user2"/>
    <property name="sql.user3" value="${sql.db}user3"/>
    
    <property name="sql.db.userpass.url" value="${sql.url}/${sql.db}?username=${sql.user}&amp;password=${sql.pass}" />
    <property name="sql.db.userpass.url2" value="${sql.url}/${sql.db2}?username=${sql.user2}&amp;password=${sql.pass}" />
    <property name="sql.db.userpass.url3" value="${sql.url}/${sql.db3}?username=${sql.user3}&amp;password=${sql.pass}" />
    
    <path id="com.mysql.jdbc">
       <fileset dir="../lib">
           <include name="mysql*.jar"/>
       </fileset>
    </path>
     
    

    <!-- targets -->


    <target name="db-show" description="Show database property values" >
        <echo message="sql.driver = ${sql.driver}" />
        <echo message="sql.url = ${sql.url}" />
        <echo message="sql.db.url = ${sql.db.url}" />
        <echo message="" />
        <pathconvert property="com.mysql.jdbc" refid="com.mysql.jdbc" />
        <echo message="com.mysql.jdbc (path) = ${com.mysql.jdbc}" />
        <echo message="" />
    </target>


    <target name="show"
        description="Show property values" >
        <echo message="ant.project.name = ${ant.project.name}" />
        <echo message="" />
        <echo message="src.dir = ${src.dir}" />
        <echo message="build.dir = ${build.dir}" />
        <echo message="build.classes.dir = ${build.classes.dir}" />
        <echo message="build.src.dir = ${build.classes.dir}" />
        <echo message="" />
        <pathconvert property="project.classpath" refid="project.classpath" />
        <echo message="project.classpath= ${project.classpath}" />
        <echo message="" />
        <echo message="ws.name= ${ws.name}" />
        <echo message="wsdl.url = ${wsdl.url}" />
        <echo message="ws.url = ${ws.url}" />
        <echo message="" />
        <echo message="run.mainclass = ${run.mainclass}" />
        <echo message="run.args = ${run.args}" />
    </target>

    <target name="init">
    <!-- description="Create temporary work directories" -->
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.classes.dir}" />
        <mkdir dir="${build.src.dir}" />
    </target>

    <target name="clean"
        description="Delete temporary work directory">
        <delete dir="${build.dir}" />
    </target>

    <target name="prepare-resources" depends="init">
    <!-- description="Include resource files in compiled program" -->
        <copy todir="${build.classes.dir}" overwrite="true">
            <fileset dir="${src.dir}" excludes="**/*.java" />
        </copy>
        <!--replace dir="${build.classes.dir}" excludes="**/*.class" summary="true">
            <replacefilter token="@example-token@" value="${example-property}" />
        </replace-->
    </target>

    <target name="-wsinit" depends="init">
        <property name="wsdl.local.file" value="${build.src.dir}/${ws.name}.wsdl" />
        <!-- check is wsimport completed successfully -->
        <property name="wsimport.success.file" value="${build.dir}/${ws.name}.wsimport" />
        <available property="wsimport.success" file="${wsimport.success.file}" />
        <!-- wsimport should execute if it did not complete successfully -->
        <condition property="wsimport.flag">
            <not><isset property="wsimport.success" /></not>
        </condition>
    </target>

    <target name="wsimport" depends="-wsinit" if="wsimport.flag"
        description="Generate web service server" >
        <!-- create local copy of WSDL -->
        <get src="${wsdl.url}" dest="${wsdl.local.file}" maxtime="30" retries="1" />
        <!-- generate web service classes using local WSDL -->
        <makeurl property="wsdl.local.url" file="${wsdl.local.file}" />
        <exec executable="wsimport" failonerror="true">
            <!-- assumes that wsimport tool is available in PATH environment property -->
            <arg value="-d" /><arg value="${build.classes.dir}"/>
            <arg value="-s" /><arg value="${build.src.dir}" />
            <arg value="${wsdl.local.url}" />
        </exec>
        
    </target>
    
    <target name="-wsinitAlive" depends="init">
        <property name="wsdl.local.fileAlive" value="${build.src.dir}/${ws.nameAlive}.wsdl" />
        <!-- check is wsimport completed successfully -->
        <property name="wsimport.success.file" value="${build.dir}/${ws.nameAlive}.wsimport" />
        <available property="wsimport.success" file="${wsimport.success.file}" />
        <!-- wsimport should execute if it did not complete successfully -->
        <condition property="wsimport.flag">
            <not><isset property="wsimport.success" /></not>
        </condition>
    </target>
    
    <target name="wsimportAliveContrato" depends="-wsinitAlive" if="wsimport.flag"
        description="Generate Alive service server" >
        <!-- create local copy of WSDL -->
        <get src="${wsdl.urlAlive}" dest="${wsdl.local.fileAlive}" maxtime="30" retries="1" />
        <!-- generate web service classes using local WSDL -->
        <makeurl property="wsdl.local.urlAlive" file="${wsdl.local.fileAlive}" />
        <exec executable="wsimportAliveContrato" failonerror="true">
            <!-- assumes that wsimport tool is available in PATH environment property -->
            <arg value="-d" /><arg value="${build.classes.dir}"/>
            <arg value="-s" /><arg value="${build.src.dir}" />
            <arg value="${wsdl.local.urlAlive}" />
        </exec>
        
    </target>
    
    <target name="wsimportAlive" depends="wsimport"
        description="Generate web service server" >
        <!-- create local copy of WSDL -->
        <get src="${wsdl.url}" dest="${wsdl.local.file}" maxtime="30" retries="1" />
        <!-- generate web service classes using local WSDL -->
        <exec executable="wsimport" failonerror="true">
            <!-- assumes that wsimport tool is available in PATH environment property -->
            <arg value="-d" /><arg value="${build.classes.dir}"/>
            <arg value="-s" /><arg value="${build.src.dir}" />
            <arg value="http://localhost:8083/alive-ws/endpoint/8083?wsdl" />
        </exec>
        
    </target>
 
    <target name="compile" depends="init,prepare-resources,wsimport"
        description="Compile source code" >
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
            includeantruntime="false" debug="true">
            <classpath refid="project.classpath" />
        </javac>
    </target>

    <target name="run" depends="compile"
        description="Run program" >
        <java classname="${run.mainclass}" fork="true" failonerror="true">
        <!--      <arg line="${run.args}" /> -->
        	<arg value="${arg0}" />
        	<arg value="${arg1}" />
        	<arg value="${arg2}" />
        	<arg value="${arg3}" />
        	<arg value="${arg4}" />
        	<arg value="${arg5}" />
        	<arg value="${arg6}" />
        	
            <classpath refid="project.classpath" />
        </java>
    </target>

    <import file="script.xml" optional="true" />

    <target name="build" depends="compile"
        description="Build project" />

    <target name="rebuild" depends="clean,build" />
    
    
        <!-- - - - - - - - - [ M y S Q L   d a t a b a s e ] - - - - - - - - - -->

    <target name="db-create">
        <echo message="Creating SQL database '${sql.db.url}'"/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.admin.user}" password="${sql.admin.pass}">
            <classpath refid="com.mysql.jdbc"/>
            CREATE DATABASE IF NOT EXISTS ${sql.db};

            USE ${sql.db};

            CREATE TABLE ENTIDADE (
               NIF int not null,
               NOME varchar(15),
               primary key (NIF)
            );
            
            CREATE TABLE SERIE (
            	SERIE_NUM int not null,
            	VALID Datetime not null,
            	FATURAS_NUM int not null,
            	primary key(SERIE_NUM)
            );
            
            CREATE TABLE FATURA (
            	SERIE_NUM int not null,
            	DATA_EMISSAO Datetime not null,
            	SEQ_NUM int not null,
            	NIF_EMISSOR int not null,
            	NIF_CLIENTE int not null,
            	IVA_FATURA int not null,
            	ANO int not null,
            	TOTAL int not null,
            	primary key(SERIE_NUM, SEQ_NUM)
           );
        </sql>
    </target>
    
    <target name="db-drop">
        <echo message="Dropping SQL database '${sql.db}' @ '${sql.url}'"/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.user}" password="${sql.pass}">
            <classpath refid="com.mysql.jdbc"/>
            DROP DATABASE IF EXISTS ${sql.db};
        </sql>
    </target>
    
    
    <target name="db-populate">
        <echo message="Populating SQL database '${sql.db.url}'"/>
        <sql driver="${sql.driver}" url="${sql.db.url}"
             userid="${sql.user}" password="${sql.pass}">
            <classpath refid="com.mysql.jdbc"/>
            INSERT INTO ENTIDADE VALUES (1001, "alice"),
                                       (1002, "bruno"),
                                       (1003, "carlos"),
                                       (1111, "zeze"),
                                       (2222, "mariazinha"),
                                       (5001, "xpto"),
                                       (5002, "yez"),
                                       (5003, "zleep"),
                                       (5111, "bc"),
                                       (5222, "bf"),
                                       (3333, "mng"),
                                       (4444, "pp");
                                      
            INSERT INTO SERIE VALUES (0, now(), 0);
        </sql>
    </target>
    
        <target name="db-dump"
            description="Print table contents">
        <echo message="Selecting all tables from '${sql.db.url}'"/>
        <sql driver="${sql.driver}" url="${sql.db.url}" print="true"
             userid="${sql.user}" password="${sql.pass}">
            <classpath refid="com.mysql.jdbc"/>
            SELECT * FROM ${sql.db}.ENTIDADE;
            SELECT * FROM ${sql.db}.SERIE;
            SELECT * FROM ${sql.db}.FATURA;
        </sql>
    </target>
    
    <!-- - - - - - - - - - - [ M y S Q L   u s e r ] - - - - - - - - - - - -->

    <target name="dbuser-create">
        <echo message="Creating SQL user '${sql.user}' with password '${sql.pass}'"/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.admin.user}" password="${sql.admin.pass}">
            <classpath refid="com.mysql.jdbc"/>
            CREATE USER '${sql.user}'@'${sql.host}' IDENTIFIED BY '${sql.pass}';
        </sql>
        <!-- antcall target="dbuser-grant" / -->
    </target>

    <target name="dbuser-drop">
        <echo message="Removes SQL user '${sql.user}'"/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.admin.user}" password="${sql.admin.pass}">
            <classpath refid="com.mysql.jdbc"/>
            DROP USER '${sql.user}'@'${sql.host}';
            flush privileges;
        </sql>
    </target>
    
    <target name="dbuser-grant">
        <echo message="Grating SQL DB permissions to '${sql.user}'@'${sql.host}' "/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.admin.user}" password="${sql.admin.pass}">
            <classpath refid="com.mysql.jdbc"/>
            GRANT USAGE
            ON *.*
            TO '${sql.user}'@'${sql.host}';

            GRANT ALL PRIVILEGES
            ON ${sql.db}.*
            TO '${sql.user}'@'${sql.host}';
        </sql>
    </target>

   <!-- - - - - - - - - - - [ M y S Q L   m a i n ] - - - - - - - - - - - -->

    <target name="db-build"
            depends="dbuser-create,dbuser-grant,db-create,db-populate"
            description="Build database"/>

    <target name="db-clean"
            depends="db-drop,dbuser-drop"
            description="Clean database"/>

    <target name="db-rebuild"
            depends="dbuser-drop,dbuser-create,dbuser-grant,db-drop,db-create,db-populate"
            description="Rebuild database"/>
    
 <!-- - - - - - - - - [ M y S Q L   d a t a b a s e 2 ] - - - - - - - - - -->

    <target name="db-create2">
        <echo message="Creating SQL database '${sql.db.url2}'"/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.admin.user}" password="${sql.admin.pass}">
            <classpath refid="com.mysql.jdbc"/>
            CREATE DATABASE IF NOT EXISTS ${sql.db2};

            USE ${sql.db2};

            CREATE TABLE ENTIDADE (
               NIF int not null,
               NOME varchar(15),
               primary key (NIF)
            );
            
            CREATE TABLE SERIE (
            	SERIE_NUM int not null,
            	VALID Datetime not null,
            	FATURAS_NUM int not null,
            	primary key(SERIE_NUM)
            );
            
            CREATE TABLE FATURA (
            	SERIE_NUM int not null,
            	DATA_EMISSAO Datetime not null,
            	SEQ_NUM int not null,
            	NIF_EMISSOR int not null,
            	NIF_CLIENTE int not null,
            	IVA_FATURA int not null,
            	ANO int not null,
            	TOTAL int not null,
            	primary key(SERIE_NUM, SEQ_NUM)
           );
        </sql>
    </target>
    
    <target name="db-drop2">
        <echo message="Dropping SQL database '${sql.db2}' @ '${sql.url}'"/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.user2}" password="${sql.pass}">
            <classpath refid="com.mysql.jdbc"/>
            DROP DATABASE IF EXISTS ${sql.db2};
        </sql>
    </target>
    
    
    <target name="db-populate2">
        <echo message="Populating SQL database '${sql.db.url2}'"/>
        <sql driver="${sql.driver}" url="${sql.db.url2}"
             userid="${sql.user2}" password="${sql.pass}">
            <classpath refid="com.mysql.jdbc"/>
            INSERT INTO ENTIDADE VALUES (1001, "alice"),
                                       (1002, "bruno"),
                                       (1003, "carlos"),
                                       (1111, "zeze"),
                                       (2222, "mariazinha"),
                                       (5001, "xpto"),
                                       (5002, "yez"),
                                       (5003, "zleep"),
                                       (5111, "bc"),
                                       (5222, "bf"),
                                       (3333, "mng"),
                                       (4444, "pp");
                                      
            INSERT INTO SERIE VALUES (0, now(), 0);
        </sql>
    </target>
    
        <target name="db-dump2"
            description="Print table contents">
        <echo message="Selecting all tables from '${sql.db.url2}'"/>
        <sql driver="${sql.driver}" url="${sql.db.url2}" print="true"
             userid="${sql.user2}" password="${sql.pass}">
            <classpath refid="com.mysql.jdbc"/>
            SELECT * FROM ${sql.db2}.ENTIDADE;
            SELECT * FROM ${sql.db2}.SERIE;
            SELECT * FROM ${sql.db2}.FATURA;
        </sql>
    </target>
    
    <!-- - - - - - - - - - - [ M y S Q L   u s e r 2 ] - - - - - - - - - - - -->

    <target name="dbuser-create2">
        <echo message="Creating SQL user '${sql.user2}' with password '${sql.pass}'"/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.admin.user}" password="${sql.admin.pass}">
            <classpath refid="com.mysql.jdbc"/>
            CREATE USER '${sql.user2}'@'${sql.host}' IDENTIFIED BY '${sql.pass}';
        </sql>
        <!-- antcall target="dbuser-grant" / -->
    </target>

    <target name="dbuser-drop2">
        <echo message="Removes SQL user '${sql.user2}'"/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.admin.user}" password="${sql.admin.pass}">
            <classpath refid="com.mysql.jdbc"/>
            DROP USER '${sql.user2}'@'${sql.host}';
            flush privileges;
        </sql>
    </target>
    
    <target name="dbuser-grant2">
        <echo message="Grating SQL DB permissions to '${sql.user2}'@'${sql.host}' "/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.admin.user}" password="${sql.admin.pass}">
            <classpath refid="com.mysql.jdbc"/>
            GRANT USAGE
            ON *.*
            TO '${sql.user2}'@'${sql.host}';

            GRANT ALL PRIVILEGES
            ON ${sql.db2}.*
            TO '${sql.user2}'@'${sql.host}';
        </sql>
    </target>

   <!-- - - - - - - - - - - [ M y S Q L   m a i n 2 ] - - - - - - - - - - - -->

    <target name="db-build2"
            depends="dbuser-create2,dbuser-grant2,db-create2,db-populate2"
            description="Build database"/>

    <target name="db-clean2"
            depends="db-drop2,dbuser-drop2"
            description="Clean database"/>

    <target name="db-rebuild2"
            depends="dbuser-drop2,dbuser-create2,dbuser-grant2,db-drop2,db-create2,db-populate2"
            description="Rebuild database"/>
    
     <!-- - - - - - - - - [ M y S Q L   d a t a b a s e 3 ] - - - - - - - - - -->

    <target name="db-create3">
        <echo message="Creating SQL database '${sql.db.url3}'"/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.admin.user}" password="${sql.admin.pass}">
            <classpath refid="com.mysql.jdbc"/>
            CREATE DATABASE IF NOT EXISTS ${sql.db3};

            USE ${sql.db3};

            CREATE TABLE ENTIDADE (
               NIF int not null,
               NOME varchar(15),
               primary key (NIF)
            );
            
            CREATE TABLE SERIE (
            	SERIE_NUM int not null,
            	VALID Datetime not null,
            	FATURAS_NUM int not null,
            	primary key(SERIE_NUM)
            );
            
            CREATE TABLE FATURA (
            	SERIE_NUM int not null,
            	DATA_EMISSAO Datetime not null,
            	SEQ_NUM int not null,
            	NIF_EMISSOR int not null,
            	NIF_CLIENTE int not null,
            	IVA_FATURA int not null,
            	ANO int not null,
            	TOTAL int not null,
            	primary key(SERIE_NUM, SEQ_NUM)
           );
        </sql>
    </target>
    
    <target name="db-drop3">
        <echo message="Dropping SQL database '${sql.db3}' @ '${sql.url}'"/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.user3}" password="${sql.pass}">
            <classpath refid="com.mysql.jdbc"/>
            DROP DATABASE IF EXISTS ${sql.db3};
        </sql>
    </target>
    
    
    <target name="db-populate3">
        <echo message="Populating SQL database '${sql.db.url3}'"/>
        <sql driver="${sql.driver}" url="${sql.db.url3}"
             userid="${sql.user3}" password="${sql.pass}">
            <classpath refid="com.mysql.jdbc"/>
            INSERT INTO ENTIDADE VALUES (1001, "alice"),
                                       (1002, "bruno"),
                                       (1003, "carlos"),
                                       (1111, "zeze"),
                                       (2222, "mariazinha"),
                                       (5001, "xpto"),
                                       (5002, "yez"),
                                       (5003, "zleep"),
                                       (5111, "bc"),
                                       (5222, "bf"),
                                       (3333, "mng"),
                                       (4444, "pp");
                                      
            INSERT INTO SERIE VALUES (0, now(), 0);
        </sql>
    </target>
    
        <target name="db-dump3"
            description="Print table contents">
        <echo message="Selecting all tables from '${sql.db.url3}'"/>
        <sql driver="${sql.driver}" url="${sql.db.url3}" print="true"
             userid="${sql.user3}" password="${sql.pass}">
            <classpath refid="com.mysql.jdbc"/>
            SELECT * FROM ${sql.db3}.ENTIDADE;
            SELECT * FROM ${sql.db3}.SERIE;
            SELECT * FROM ${sql.db3}.FATURA;
        </sql>
    </target>
    
    <!-- - - - - - - - - - - [ M y S Q L   u s e r 3 ] - - - - - - - - - - - -->

    <target name="dbuser-create3">
        <echo message="Creating SQL user '${sql.user3}' with password '${sql.pass}'"/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.admin.user}" password="${sql.admin.pass}">
            <classpath refid="com.mysql.jdbc"/>
            CREATE USER '${sql.user3}'@'${sql.host}' IDENTIFIED BY '${sql.pass}';
        </sql>
        <!-- antcall target="dbuser-grant" / -->
    </target>

    <target name="dbuser-drop3">
        <echo message="Removes SQL user '${sql.user3}'"/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.admin.user}" password="${sql.admin.pass}">
            <classpath refid="com.mysql.jdbc"/>
            DROP USER '${sql.user3}'@'${sql.host}';
            flush privileges;
        </sql>
    </target>
    
    <target name="dbuser-grant3">
        <echo message="Grating SQL DB permissions to '${sql.user3}'@'${sql.host}' "/>
        <sql driver="${sql.driver}" url="${sql.url}"
             userid="${sql.admin.user}" password="${sql.admin.pass}">
            <classpath refid="com.mysql.jdbc"/>
            GRANT USAGE
            ON *.*
            TO '${sql.user3}'@'${sql.host}';

            GRANT ALL PRIVILEGES
            ON ${sql.db3}.*
            TO '${sql.user3}'@'${sql.host}';
        </sql>
    </target>

   <!-- - - - - - - - - - - [ M y S Q L   m a i n 3 ] - - - - - - - - - - - -->

    <target name="db-build3"
            depends="dbuser-create3,dbuser-grant3,db-create3,db-populate3"
            description="Build database"/>

    <target name="db-clean3"
            depends="db-drop3,dbuser-drop3"
            description="Clean database"/>

    <target name="db-rebuild3"
            depends="dbuser-drop3,dbuser-create3,dbuser-grant3,db-drop3,db-create3,db-populate3"
            description="Rebuild database"/>
    
</project>

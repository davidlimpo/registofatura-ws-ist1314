<project name="RegistoCli" default="build" basedir=".">

    <description>
        Java Web Service client build file
        UDDI is used to find the WSDL location

        An Ant project defines targets that execute tasks
        parameterized by properties and paths.

        More information at: http://ant.apache.org/manual/
    </description>

    <!-- properties and paths -->

    <property name="src.dir" location="src" />
    <property name="build.dir" location="build" />
    <property name="build.classes.dir" location="${build.dir}/classes" />
    <property name="build.src.dir" location="${build.dir}/src" />

    <path id="project.classpath">
        <!-- compiled classes -->
        <pathelement location="${build.classes.dir}" />
        <!-- libraries -->
        <fileset dir="../lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <property name="uddi.url" value="http://localhost:8081" />
    <property name="ws.name" value="RegistoFatura" />

    <property name="run.mainclass" value="registofatura.client.RegistoClient"/>
    <property name="run.args" value="${uddi.url} '${ws.name}'" />


    <!-- targets -->

    <target name="show" description="Show property values" >
        <echo message="ant.project.name = ${ant.project.name}" />
        <echo message="" />
        <echo message="src.dir = ${src.dir}" />
        <echo message="build.dir = ${build.dir}" />
        <echo message="build.classes.dir = ${build.classes.dir}" />
        <echo message="build.src.dir = ${build.classes.dir}" />
        <echo message="" />
        <pathconvert property="project.classpath" refid="project.classpath" />
        <echo message="project.classpath= ${project.classpath}" />
        <echo message="" />
        <echo message="uddi.url = ${uddi.url}" />
        <echo message="ws.name = ${ws.name}" />
        <echo message="" />
        <echo message="run.mainclass = ${run.mainclass}" />
        <echo message="run.args = ${run.args}" />
    </target>

    <target name="init">
    <!-- description="Create temporary work directories" -->
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.classes.dir}" />
        <mkdir dir="${build.src.dir}" />
    </target>

    <target name="clean"
        description="Delete temporary work directory">
        <delete dir="${build.dir}" />
    </target>

    <target name="prepare-resources" depends="init">
    <!-- description="Include resource files in compiled program" -->
        <copy todir="${build.classes.dir}" overwrite="true">
            <fileset dir="${src.dir}" excludes="**/*.java" />
        </copy>
        <!--replace dir="${build.classes.dir}" excludes="**/*.class" summary="true">
            <replacefilter token="@example-token@" value="${example-property}" />
        </replace-->
    </target>

    <target name="-wsinit" depends="init">
        <property name="wsdl.local.file" value="${build.src.dir}/${ws.name}.wsdl" />
        <!-- check is wsimport completed successfully -->
        <property name="wsimport.success.file" value="${build.dir}/${ws.name}.wsimport" />
        <available property="wsimport.success" file="${wsimport.success.file}" />
        <!-- wslookup should execute if:
            wsdl.url is not specified (UDDI override) and
            wsimport did not complete successfully -->
        <condition property="wslookup.flag"><and>
            <not><isset property="wsdl.url" /></not>
            <not><isset property="wsimport.success" /></not>
        </and></condition>
        <!-- wsimport should execute if it did not complete successfully -->
        <condition property="wsimport.flag">
            <not><isset property="wsimport.success" /></not>
        </condition>
    </target>

    <target name="wslookup" depends="-wsinit" if="wslookup.flag"
        description="Query UDDI for web service address" >
        <!-- compile UDDI utility class -->
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
            includeantruntime="false" debug="true"
            includes="example/ws/uddi/*.java">
            <classpath refid="project.classpath" />
        </javac>
        <!-- execute main method of UDDI utility class
            on source directory (so that it can find uddi.xml file) and
            write program output to file -->
        <echo message="Query UDDI at ${uddi.url} about '${ws.name}'" />
        <property name="ws.url.file" value="${build.dir}/${ws.name}.uddi" />
        <java classname="example.ws.uddi.UDDINaming"
            fork="true" failonerror="true"
            dir="${src.dir}" output="${ws.url.file}">
            <arg line="${uddi.url} '${ws.name}'" />
            <classpath refid="project.classpath" />
        </java>
        <!-- load URL from line that starts with http in output file -->
        <loadfile property="ws.url" srcFile="${ws.url.file}"><filterchain>
                <linecontainsregexp><regexp pattern="^http*"/></linecontainsregexp>
                <striplinebreaks/>
        </filterchain></loadfile>
        <!-- check if URL was found -->
        <fail message="'${ws.name}' address not found at ${uddi.url}!">
            <condition><or>
                <not><isset property="ws.url" /></not>
                <equals arg1="" arg2="${ws.url}" />
            </or></condition>
        </fail>
        <property name="wsdl.url" value="${ws.url}?WSDL" />
    </target>

    <target name="wsimport" depends="-wsinit,wslookup" if="wsimport.flag"
        description="Generate web service client" >
        <!-- create local copy of WSDL -->
        <get src="${wsdl.url}" dest="${wsdl.local.file}" maxtime="30" retries="1" />
        <!-- generate web service classes using local WSDL -->
        <makeurl property="wsdl.local.url" file="${wsdl.local.file}" />
        <exec executable="wsimport" failonerror="true">
            <!-- assumes that wsimport tool is available in PATH environment property -->
            <arg value="-d" /><arg value="${build.classes.dir}"/>
            <arg value="-s" /><arg value="${build.src.dir}" />
            <arg value="${wsdl.local.url}" />
        </exec>
        <touch file="${wsimport.success.file}" />
    </target>

    <target name="compile" depends="init,prepare-resources,wsimport"
        description="Compile source code" >
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
            includeantruntime="false" debug="true">
            <classpath refid="project.classpath" />
        </javac>
    </target>

    <target name="run" depends="compile"
        description="Run program" >
        <java classname="${run.mainclass}" fork="true" failonerror="true">
            <arg line="${run.args}" />
            <classpath refid="project.classpath" />
        </java>
    </target>

    <import file="script.xml" optional="true" />

    <target name="build" depends="compile"
        description="Build project" />

    <target name="rebuild" depends="clean,build" />

</project>
